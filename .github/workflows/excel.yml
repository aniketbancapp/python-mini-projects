name: SonarQube Scan with Excel Report

on:
  push:
    branches: [ master ]

jobs:
  sonarqube-scan:
    name: SonarQube Scan with Excel Report
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl python3-pip
          pip3 install sonarqube-api pandas openpyxl

      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.projectKey=excel
            -Dsonar.projectName="excel"
            -Dsonar.projectVersion=1.0
            -Dsonar.sources=.
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.host.url=http://20.198.126.18:9000
            -Dsonar.login=sqp_4816dedd6d794f8150d5e9df293c33312b3bd8ff

      - name: Generate Excel Report
        env:
          SONAR_HOST_URL: http://20.198.126.18:9000
          SONAR_TOKEN: sqp_4816dedd6d794f8150d5e9df293c33312b3bd8ff
          SONAR_PROJECT_KEY: excel
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          python3 - <<EOF
          import os
          import pandas as pd
          from sonarqube import SonarQubeClient
          from datetime import datetime

          url = os.getenv('SONAR_HOST_URL')
          token = os.getenv('SONAR_TOKEN')
          project_key = os.getenv('SONAR_PROJECT_KEY')
          branch = os.getenv('GITHUB_REF_NAME', 'main')
          commit_id = os.getenv('GITHUB_SHA')
          repo = os.getenv('GITHUB_REPOSITORY')

          sonar = SonarQubeClient(sonarqube_url=url, token=token)

          now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

          summary_data = {
              'Git URL': [f"https://github.com/{repo}"],
              'Branch Name': [branch],
              'Review Date': [now],
              'Commit ID': [commit_id],
              'Overall Findings': [''],
              'Tool': ['Sonar', 'PMD', 'CPD', 'Total'],
              'Sonar issues': [''],
              'Severity': ['Blocker', 'Critical', 'Major', 'Minor', 'Info', 'Total'],
              'Count': [44, 2723, 1823, 769, 31, '=SUM(F9:F13)'],
              'Sonar security hotspot': [''],
              'VulnerabilityProbability': ['Low', 'Medium', 'High', 'Total'],
              'Count': [15, 33, 54, '=SUM(I9:I11)'],
              'Sonar duplications': [''],
              'No. of findings': [862, '', ''],
              'PMD': [''],
              'Priority': ['Low', 'Medium Low', 'Medium', 'Medium High', 'High', 'Total'],
              'Count': [0, 0, 0, 0, 0, '=SUM(N9:N13)'],
              'CPD': [''],
              'No. of findings': [0, '', '']
          }

          # Fetch issues data
          issues = sonar.issues.search_issues(componentKeys=project_key)
          issues_data = []
          for issue in issues['issues']:
              issues_data.append({
                  'Si No': len(issues_data) + 1,
                  'CreationDate': issue.get('creationDate'),
                  'Rule': issue.get('rule'),
                  'Type': issue.get('type'),
                  'Severity': issue.get('severity'),
                  'File': issue.get('component'),
                  'Line': issue.get('line', ''),
                  'Message': issue.get('message'),
                  'Status': issue.get('status'),
                  'TargetDate': '',
                  'ClosedDate': '',
                  'Remarks': ''
              })

          with pd.ExcelWriter('sonarqube_report.xlsx', engine='openpyxl') as writer:
              pd.DataFrame(summary_data).to_excel(writer, sheet_name='Summary', index=False)
              pd.DataFrame(issues_data).to_excel(writer, sheet_name='SonarIssues', index=False)

          print("Excel report generated successfully.")
          EOF

      - name: Upload Excel Report
        uses: actions/upload-artifact@v4
        with:
          name: sonarqube-report
          path: sonarqube_report.xlsx
